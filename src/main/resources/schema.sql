DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FILM;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS GENRE_FILM;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS FRIENDSHIP;
DROP TABLE IF EXISTS LIKES;

CREATE TABLE IF NOT EXISTS `MPA` (
  `ID` bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  `NAME` varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS `GENRE` (
  `ID` bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  `NAME` varchar UNIQUE
);

CREATE TABLE IF NOT EXISTS `USERS` (
  `ID` bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  `EMAIL`  varchar UNIQUE NOT NULL,
  `LOGIN` varchar NOT NULL,
  `NAME` varchar,
  `BIRTHDAY` date NOT NULL
);

CREATE TABLE IF NOT EXISTS `FILM` (
  `ID` bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  `NAME` varchar NOT NULL,
  `DESCRIPTION` varchar,
  `RELEASE_DATE` date NOT NULL,
  `DURATION` integer,
  `MPA_ID` bigint  REFERENCES `MPA` (`ID`),
  UNIQUE (NAME, DESCRIPTION, RELEASE_DATE, DURATION)
);

CREATE TABLE IF NOT EXISTS `GENRE_FILM` (
  `FILM_ID` bigint REFERENCES `FILM` (`ID`),
  `GENRE_ID` bigint REFERENCES `GENRE` (`ID`),
  PRIMARY KEY (`FILM_ID`, `GENRE_ID`)
);

CREATE TABLE IF NOT EXISTS `FRIENDSHIP` (
  `USER_ID` bigint  REFERENCES `USERS` (`ID`),
  `FRIEND_ID` bigint REFERENCES `USERS` (`ID`),
  `STATUS` boolean,
  PRIMARY KEY (`USER_ID`, `FRIEND_ID`)
);

CREATE TABLE IF NOT EXISTS `LIKES` (
  `USER_ID` bigint REFERENCES `USERS` (`ID`),
  `FILM_ID` bigint REFERENCES `FILM` (`ID`),
  PRIMARY KEY (`USER_ID`, `FILM_ID`)
);